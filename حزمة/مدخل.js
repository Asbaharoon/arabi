exports.code = "function __arjs__translate__(obj, map, options={}) {\n_@_@indent@_@_if (map instanceof Function) map = map(obj); // dynamic maps\n_@_@indent@_@_let mapMap = [[], []]; // [arabicKey[], originalKey[]]\n_@_@indent@_@_Object.entries(map).forEach(([k, v])=>{\n_@_@indent@_@__@_@indent@_@_let _k = (typeof v === 'string') ? v : v[0];\n_@_@indent@_@__@_@indent@_@_mapMap[0].push(k);\n_@_@indent@_@__@_@indent@_@_mapMap[1].push(_k);\n_@_@indent@_@_});\n\n_@_@indent@_@_let proxyHandler = {};\n\n_@_@indent@_@_if (map) {\n_@_@indent@_@__@_@indent@_@_Object.assign(proxyHandler, {\n\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_get(target, prop, receiver) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if (prop in target) return Reflect.get(target, prop, receiver);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_let v = map[prop];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if (v) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if (typeof v === 'string') {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_let value = Reflect.get(target, v, receiver);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_value = typeof value == 'function' ? value.bind(target) : value;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_return value;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_}\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if (v[1]) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_// we translate another object in the targeted propperty\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_let value = Reflect.get(target, v[0], receiver);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_value = typeof value == 'function' ? value.bind(target) : value;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_let translatedObject = __arjs__translate__(value, v[1], v[2]);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_Object.defineProperty(target, prop, { value: translatedObject });\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_return translatedObject;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_}\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_}\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_return undefined;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_},\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_set(target, prop, value) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_let validSetting = true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if(prop in map) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_prop = map[prop];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if (typeof prop !== 'string') prop = prop[0];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_}\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_let i;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if ((i = mapMap[1].indexOf[prop]) > -1) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_// delete the cached value, translate again when getting using the arabic key.\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_validSetting = delete target[mapMap[0][i]];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_}\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_target[prop] = value;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_return validSetting;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_},\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_has(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_if (prop in map) prop = map[prop];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_prop === typeof prop === 'string' ? prop : prop[0];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_return prop in target;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_},\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// hasProperty(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// getPrototypeOf(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return Object.getPrototypeOf(o);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// setPrototypeOf(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// isExtensible(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// preventExtensions(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// defineProperty(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// getOwnPropertyDescriptor(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// ownKeys(target, prop) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_//   return true;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_// },\n_@_@indent@_@__@_@indent@_@_});\n_@_@indent@_@_}\n\n_@_@indent@_@_if (options && options.returnMap) {\n_@_@indent@_@__@_@indent@_@_proxyHandler.apply = function(target, thisArg, args) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_let value = target.apply(thisArg, args);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_let map = options.returnMap[0],\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_options = options.returnMap[1];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_map = map instanceof Function ? map(value) : map;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_value = __arjs__translate__(value, map, options);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_return value;\n_@_@indent@_@__@_@indent@_@_}\n_@_@indent@_@_}\n\n_@_@indent@_@_if (options && options.constructMap) {\n_@_@indent@_@__@_@indent@_@_proxyHandler.construct = function(target, args) {\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_let value = Reflect.construct(target, args);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_let map = options.constructMap[0],\n_@_@indent@_@__@_@indent@_@__@_@indent@_@__@_@indent@_@_options = options.constructMap[1];\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_map = map instanceof Function ? map(value) : map;\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_value = __arjs__translate__(value, map, options);\n_@_@indent@_@__@_@indent@_@__@_@indent@_@_return value;\n_@_@indent@_@__@_@indent@_@_}\n_@_@indent@_@_}\n\n_@_@indent@_@_return new Proxy(obj, proxyHandler);\n}\n";
exports.requireCode = "var __require__cache__ = {};\nfunction __arjs__translate__require__(__module, __query) {\n_@_@indent@_@_// they are module and query\n_@_@indent@_@_if(__query in __require__cache__) return __require__cache__[__query];\n_@_@indent@_@_// __arjs__modules__tmap__ is defined externally by this function's user \n_@_@indent@_@_if (__query in __arjs__modules__tmap__) {\n_@_@indent@_@__@_@indent@_@_let m = __arjs__modules__tmap__[__query];\n_@_@indent@_@__@_@indent@_@_let _ = __arjs__translate__(require(m[0]), m[1], m[2]);\n_@_@indent@_@__@_@indent@_@_Object.assign(__require__cache__, __module, { value: _ });\n_@_@indent@_@__@_@indent@_@_return _;\n_@_@indent@_@_}\n_@_@indent@_@_return require(__query);\n};\n\n// exports.__default = function __arjs__translate__require__(arNameOrModule, enNameorQuery, map, options) {\n//   if(arguments.length === 2) {\n//     // they are module and query\n//     if(enNameorQuery in __require__cache__) return __require__cache__[enNameorQuery];\n//     // __arjs__modules__tmap__ is defined externally by this function's user \n//     if (enNameorQuery in __arjs__modules__tmap__) {\n//       let m = __arjs__modules__tmap__[enNameorQuery];\n//       let _ = __arjs__translate__(require(m[0]), m[1], m[2]);\n//       Object.assign(__require__cache__, arNameOrModule, { value: _ });\n//       return _;\n//     }\n//     return require(enNameorQuery);\n//   } else {\n//     // they are arName, enName, map, and options\n//     if(arNameOrModule in __require__cache__) return __require__cache__[arNameOrModule];\n//     let _ = __arjs__translate__(require(enNameorQuery), map, options);\n//     Object.assign(__require__cache__, arNameOrModule, { value: _ });\n//     return _;\n//   }\n// };\n";
exports.translate = require('./مترجم').__default;
exports.translateRequire = require('./استدعي').__default;
